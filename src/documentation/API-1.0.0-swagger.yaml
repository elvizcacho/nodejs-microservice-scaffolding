openapi: 3.0.0
info:
  version: 1.0.0
  title: freelancer API
  description: API to consume JUAPP's freelancer services
servers:
  - description: Prod server
    url: https://juanvizcaino.com/freelancer/v1.0.0/
  - description: Local server
    url: http://localhost:8082/v1.0.0/
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  responses:
    400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    503:
      description: Service unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    500:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:
    DataTypes:
      type: string
      enum:
        - 'BOOL'
        - 'DATE'
        - 'FLOAT'
        - 'INT'
        - 'TEXT'
      example: TEXT
    LoginRequest:
      type: object
      properties:
        email:
          required: true
          type: string
          example: "testuser@evana.de"
          format: email
        password:
          required: true
          type: string
          example: "Q9~N_Ijy3u"

    LoginResponse:
      type: object
      properties:
        token:
          type: string

paths:
  /login:
    post:
      summary: Logs into Evana's api
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        200:
          description: LogIn was successful and a token is provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        503:
          $ref: '#/components/responses/503'
        500:
          $ref: '#/components/responses/500'


